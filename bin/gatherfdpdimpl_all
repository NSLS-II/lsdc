#!/bin/bash

if [ "${1}xx" == "--helpxx" ];
  then
    echo "gatherfdpdim_all -- gather files from fast_dp and dimple runs with all HKL"
    echo "usage:"
    echo "    gatherfdpdim_all --help      print this message"
    echo "    gatherfdpdim_all             gather from current directory and below"
    echo "    gatherfdpdim_all projectdir  gather from projectdir and below"
    echo " creates ./fast_dp_dir /fast_dp_dir/XDS and ./dimple_dir"
    echo " looks for fast_dp.log, fast_dp.mtz, final.mtz, final.pdb, screen.log"
    echo "           XDS_ASCII.HKL, INTEGRATE.HKL"
    echo " and puts the first two into fast_dp_dir, the next three into dimple_dir,"
    echo "           and the two HKL files into fast_dp_dir/XDS"
    echo " naming the files by full path names with any embedded solidus changed"
    echo " to hyphens"

    exit
fi

if [ "${1}xx" == "xx" ];
  then
    projectdir=`pwd`
  else
    projectdir="$1"
fi

echo fetching from $projectdir

declare -a found

mkdir -p fast_dp_dir
mkdir -p fast_dp_dir/XDS
mkdir -p dimple_dir

found=$( (cd $projectdir; find . -name fast_dp.log)|tr " " "\n")
foundarray=(${found// / })
#echo $found
for fndfile  in ${foundarray[@]} ;  do
    echo $fndfile
    abspath=${projectdir}/${fndfile}
    abspath=$( cd $(dirname $abspath); pwd)/$( basename $fndfile)
    targetfile=fast_dp_dir/`echo $fndfile|sed 's/\//-/g'|sed 's/^\.-//'`
    echo cp -u -p "$abspath" "$targetfile"
    cp -u -p "$abspath" "$targetfile"
done

found=$( (cd $projectdir; find . -name fast_dp.mtz)|tr " " "\n")
foundarray=(${found// / })
#echo $found
for fndfile  in ${foundarray[@]} ;  do
    echo $fndfile
    abspath=${projectdir}/${fndfile}
    abspath=$( cd $(dirname $abspath); pwd)/$( basename $fndfile)
    targetfile=fast_dp_dir/`echo $fndfile|sed 's/\//-/g'|sed 's/^\.-//'`
    echo cp -u -p "$abspath" "$targetfile"
    cp -u -p "$abspath" "$targetfile"
done

found=$( (cd $projectdir; find . -name final.mtz)|tr " " "\n")
foundarray=(${found// / })
#echo $found
for fndfile  in ${foundarray[@]} ;  do
    echo $fndfile
    abspath=${projectdir}/${fndfile}
    abspath=$( cd $(dirname $abspath); pwd)/$( basename $fndfile)
    targetfile=dimple_dir/`echo $fndfile|sed 's/\//-/g'|sed 's/^\.-//'`
    echo cp -u -p "$abspath" "$targetfile"
    cp -u -p "$abspath" "$targetfile"
done

found=$( (cd $projectdir; find . -name final.pdb)|tr " " "\n")
foundarray=(${found// / })
#echo $found
for fndfile  in ${foundarray[@]} ;  do
    echo $fndfile
    abspath=${projectdir}/${fndfile}
    abspath=$( cd $(dirname $abspath); pwd)/$( basename $fndfile)
    targetfile=dimple_dir/`echo $fndfile|sed 's/\//-/g'|sed 's/^\.-//'`
    echo cp -u -p "$abspath" "$targetfile"
    cp -u -p "$abspath" "$targetfile"
done

found=$( (cd $projectdir; find . -name screen.log)|tr " " "\n")
foundarray=(${found// / })
#echo $found
for fndfile  in ${foundarray[@]} ;  do
    echo $fndfile
    abspath=${projectdir}/${fndfile}
    abspath=$( cd $(dirname $abspath); pwd)/$( basename $fndfile)
    targetfile=dimple_dir/`echo $fndfile|sed 's/\//-/g'|sed 's/^\.-//'`
    echo cp -u -p "$abspath" "$targetfile"
    cp -u -p "$abspath" "$targetfile"
done

found=$( (cd $projectdir; find . -name XDS_ASCII.HKL)|tr " " "\n")
foundarray=(${found// / })
#echo $found
for fndfile  in ${foundarray[@]} ;  do
    echo $fndfile
    abspath=${projectdir}/${fndfile}
    abspath=$( cd $(dirname $abspath); pwd)/$( basename $fndfile)
    targetfile=fast_dp_dir/XDS/`echo $fndfile|sed 's/\//-/g'|sed 's/^\.-//'|sed 's/_ASCII\.HKL/\_ascii\.hkl/'`
    echo cp -u -p "$abspath" "$targetfile"
    cp -u -p "$abspath" "$targetfile"
done

found=$( (cd $projectdir; find . -name INTEGRATE.HKL)|tr " " "\n")
foundarray=(${found// / })
#echo $found
for fndfile  in ${foundarray[@]} ;  do
    echo $fndfile
    abspath=${projectdir}/${fndfile}
    abspath=$( cd $(dirname $abspath); pwd)/$( basename $fndfile)
    targetfile=fast_dp_dir/XDS/`echo $fndfile|sed 's/\//-/g'|sed 's/^\.-//'|sed 's/INTEGRATE\.HKL/_is\.hkl/'`
    echo cp -u -p "$abspath" "$targetfile"
    cp -u -p "$abspath" "$targetfile"
done

exit
